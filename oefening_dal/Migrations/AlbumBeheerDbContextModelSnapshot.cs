// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using oefening_dal;

#nullable disable

namespace oefening_dal.Migrations
{
    [DbContext(typeof(AlbumBeheerDbContext))]
    partial class AlbumBeheerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("oefening_models.Albums", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"), 1L, 1);

                    b.Property<int>("AlbumTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Breedte")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("Conditie")
                        .HasColumnType("tinyint");

                    b.Property<bool>("EersteDruk")
                        .HasColumnType("bit");

                    b.Property<int?>("EventIDIn")
                        .HasColumnType("int");

                    b.Property<int?>("EventIDUit")
                        .HasColumnType("int");

                    b.Property<bool>("Favoriet")
                        .HasColumnType("bit");

                    b.Property<decimal>("Hoogte")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InBedrag")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Inkleuring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kaft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LaatsteUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Paginas")
                        .HasColumnType("int");

                    b.Property<int>("ReeksID")
                        .HasColumnType("int");

                    b.Property<int>("Reeksnummer")
                        .HasColumnType("int");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Uitbedrag")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UitgeverID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Uitgiftedatum")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Waarde")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("Waardering")
                        .HasColumnType("tinyint");

                    b.HasKey("AlbumID");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("oefening_models.Genres", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"), 1L, 1);

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("oefening_models.Reeksen", b =>
                {
                    b.Property<int>("ReeksID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReeksID"), 1L, 1);

                    b.Property<int>("AlbumsAlbumID")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LaatsteUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReekstypeID")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReeksID");

                    b.HasIndex("AlbumsAlbumID");

                    b.ToTable("Reeksen");
                });

            modelBuilder.Entity("oefening_models.ReeksenGenres", b =>
                {
                    b.Property<int>("ReeksGenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReeksGenreID"), 1L, 1);

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("ReeksID")
                        .HasColumnType("int");

                    b.HasKey("ReeksGenreID");

                    b.HasIndex("GenreID");

                    b.HasIndex(new[] { "ReeksID", "GenreID" }, "IX_ReeksIDGenreID")
                        .IsUnique();

                    b.ToTable("ReeksGenres");
                });

            modelBuilder.Entity("oefening_models.Reekstypes", b =>
                {
                    b.Property<int>("ReekstypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReekstypeID"), 1L, 1);

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReekstypeID");

                    b.ToTable("Reekstypes");
                });

            modelBuilder.Entity("oefening_models.Reeksen", b =>
                {
                    b.HasOne("oefening_models.Albums", "Albums")
                        .WithMany("Reeksens")
                        .HasForeignKey("AlbumsAlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Albums");
                });

            modelBuilder.Entity("oefening_models.ReeksenGenres", b =>
                {
                    b.HasOne("oefening_models.Genres", "Genre")
                        .WithMany("ReeksenGenres")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oefening_models.Reeksen", "Reeks")
                        .WithMany("ReeksenGenres")
                        .HasForeignKey("ReeksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Reeks");
                });

            modelBuilder.Entity("oefening_models.Albums", b =>
                {
                    b.Navigation("Reeksens");
                });

            modelBuilder.Entity("oefening_models.Genres", b =>
                {
                    b.Navigation("ReeksenGenres");
                });

            modelBuilder.Entity("oefening_models.Reeksen", b =>
                {
                    b.Navigation("ReeksenGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
